[
  {
    "objectID": "Filtering Walkthrough.html",
    "href": "Filtering Walkthrough.html",
    "title": "Filtering Walkthrough",
    "section": "",
    "text": "When you are trying to sort and filter out certain works and information, it is important to know which exact functions you should use in order to ensure that you get the information that you’re looking for. I will walk you through the steps to sort out information from a data set by using the filter function.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n\n\n\nGA_votedemos_2016_gen <- readRDS(\"GA_votedemos_2016_gen.rds\")\n\nFirst we will be using Georgia’s voting data from 2016:\nUse the function head() to load in the data and give you a snapshot of what the data looks like:\n\nhead(GA_votedemos_2016_gen)\n\n# A tibble: 6 × 70\n  elexy…¹ elext…² county count…³ black…⁴ black…⁵ black…⁶ black…⁷ black…⁸ black…⁹\n    <dbl> <chr>   <chr>  <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1    2016 general APPLI… 001         954     393    41.2    1247     692    55.5\n2    2016 general ATKIN… 002         396     200    50.5     527     310    58.8\n3    2016 general BACON  003         343     106    30.9     566     267    47.2\n4    2016 general BAKER  004         425     225    52.9     557     365    65.5\n5    2016 general BALDW… 005        4160    2225    53.5    6028    4078    67.6\n6    2016 general BANKS  006         111      49    44.1      84      43    51.2\n# … with 60 more variables: black_unknown_registered <dbl>,\n#   black_unknown_voted <dbl>, black_unknown_pct <dbl>,\n#   white_male_registered <dbl>, white_male_voted <dbl>, white_male_pct <dbl>,\n#   white_female_registered <dbl>, white_female_voted <dbl>,\n#   white_female_pct <dbl>, white_unknown_registered <dbl>,\n#   white_unknown_voted <dbl>, white_unknown_pct <dbl>,\n#   asian_male_registered <dbl>, asian_male_voted <dbl>, …\n\n\nSo now we have our data loaded in. But lets say I only want information from the general elections\n\nfilter(GA_votedemos_2016_gen, elextype == \"general\")\n\n# A tibble: 159 × 70\n   elexyear elextype county   county_c…¹ black…² black…³ black…⁴ black…⁵ black…⁶\n      <dbl> <chr>    <chr>    <chr>        <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1     2016 general  APPLING  001            954     393    41.2    1247     692\n 2     2016 general  ATKINSON 002            396     200    50.5     527     310\n 3     2016 general  BACON    003            343     106    30.9     566     267\n 4     2016 general  BAKER    004            425     225    52.9     557     365\n 5     2016 general  BALDWIN  005           4160    2225    53.5    6028    4078\n 6     2016 general  BANKS    006            111      49    44.1      84      43\n 7     2016 general  BARROW   007           2135    1059    49.6    2822    1860\n 8     2016 general  BARTOW   008           2698    1181    43.8    3521    2002\n 9     2016 general  BEN HILL 009           1299     578    44.5    2103    1235\n10     2016 general  BERRIEN  010            481     218    45.3     634     348\n# … with 149 more rows, 61 more variables: black_female_pct <dbl>,\n#   black_unknown_registered <dbl>, black_unknown_voted <dbl>,\n#   black_unknown_pct <dbl>, white_male_registered <dbl>,\n#   white_male_voted <dbl>, white_male_pct <dbl>,\n#   white_female_registered <dbl>, white_female_voted <dbl>,\n#   white_female_pct <dbl>, white_unknown_registered <dbl>,\n#   white_unknown_voted <dbl>, white_unknown_pct <dbl>, …\n\n\nNow that we have all the information from the general elections, then I may want to filter this even more to be more specific. Lets say out of this data set I only want to know about Banks County. I would use %>% to connect my two functions and filter out of the data I just filtered.\n\nfilter(GA_votedemos_2016_gen, elextype == \"general\") %>%\nfilter(county == \"BANKS\")\n\n# A tibble: 1 × 70\n  elexy…¹ elext…² county count…³ black…⁴ black…⁵ black…⁶ black…⁷ black…⁸ black…⁹\n    <dbl> <chr>   <chr>  <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1    2016 general BANKS  006         111      49    44.1      84      43    51.2\n# … with 60 more variables: black_unknown_registered <dbl>,\n#   black_unknown_voted <dbl>, black_unknown_pct <dbl>,\n#   white_male_registered <dbl>, white_male_voted <dbl>, white_male_pct <dbl>,\n#   white_female_registered <dbl>, white_female_voted <dbl>,\n#   white_female_pct <dbl>, white_unknown_registered <dbl>,\n#   white_unknown_voted <dbl>, white_unknown_pct <dbl>,\n#   asian_male_registered <dbl>, asian_male_voted <dbl>, …"
  },
  {
    "objectID": "01_virginia_election_project_datawrangling.html",
    "href": "01_virginia_election_project_datawrangling.html",
    "title": "Virginia Election Project",
    "section": "",
    "text": "Data available here: https://historical.elections.virginia.gov/elections/view/144567/\nA little column cleaning and we’ll load in the data file.\n\nprez_2020 <- read_csv(\"processed_data/va_2020_prez_cleaned.csv\")\n\nRows: 134 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): locality\nnum (3): biden, trump, total_votes_2021_prez\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nLet’s see what we have\n\nhead(prez_2020) \n\n# A tibble: 6 × 4\n  locality         biden trump total_votes_2021_prez\n  <chr>            <dbl> <dbl>                 <dbl>\n1 Accomack County   7578  9172                 16962\n2 Albemarle County 42466 20804                 64657\n3 Alexandria City  66240 14544                 82508\n4 Alleghany County  2243  5859                  8203\n5 Amelia County     2411  5390                  7893\n6 Amherst County    5672 11041                 17005\n\n\nCalculating percentage of the vote\n\nprez_2020 %>% \n  mutate(\n    biden_pct = biden/total_votes_2021_prez\n  )\n\n# A tibble: 134 × 5\n   locality           biden trump total_votes_2021_prez biden_pct\n   <chr>              <dbl> <dbl>                 <dbl>     <dbl>\n 1 Accomack County     7578  9172                 16962     0.447\n 2 Albemarle County   42466 20804                 64657     0.657\n 3 Alexandria City    66240 14544                 82508     0.803\n 4 Alleghany County    2243  5859                  8203     0.273\n 5 Amelia County       2411  5390                  7893     0.305\n 6 Amherst County      5672 11041                 17005     0.334\n 7 Appomattox County   2418  6702                  9268     0.261\n 8 Arlington County  105344 22318                130699     0.806\n 9 Augusta County     10840 30714                 42278     0.256\n10 Bath County          646  1834                  2501     0.258\n# … with 124 more rows\n\n\nNow let’s do some rounding and move that decimal point\n\nprez_2020 %>% \n  mutate(\n    biden_pct = janitor::round_half_up(biden / total_votes_2021_prez * 100, 1)\n  )\n\n# A tibble: 134 × 5\n   locality           biden trump total_votes_2021_prez biden_pct\n   <chr>              <dbl> <dbl>                 <dbl>     <dbl>\n 1 Accomack County     7578  9172                 16962      44.7\n 2 Albemarle County   42466 20804                 64657      65.7\n 3 Alexandria City    66240 14544                 82508      80.3\n 4 Alleghany County    2243  5859                  8203      27.3\n 5 Amelia County       2411  5390                  7893      30.5\n 6 Amherst County      5672 11041                 17005      33.4\n 7 Appomattox County   2418  6702                  9268      26.1\n 8 Arlington County  105344 22318                130699      80.6\n 9 Augusta County     10840 30714                 42278      25.6\n10 Bath County          646  1834                  2501      25.8\n# … with 124 more rows\n\n\nNow trump too\n\nprez_2020 <- prez_2020 %>% \n  mutate(\n    biden_pct = janitor::round_half_up(biden / total_votes_2021_prez * 100, 2),\n    trump_pct = janitor::round_half_up(trump / total_votes_2021_prez * 100, 2)\n  )\n\nhead(prez_2020)\n\n# A tibble: 6 × 6\n  locality         biden trump total_votes_2021_prez biden_pct trump_pct\n  <chr>            <dbl> <dbl>                 <dbl>     <dbl>     <dbl>\n1 Accomack County   7578  9172                 16962      44.7      54.1\n2 Albemarle County 42466 20804                 64657      65.7      32.2\n3 Alexandria City  66240 14544                 82508      80.3      17.6\n4 Alleghany County  2243  5859                  8203      27.3      71.4\n5 Amelia County     2411  5390                  7893      30.6      68.3\n6 Amherst County    5672 11041                 17005      33.4      64.9"
  },
  {
    "objectID": "01_virginia_election_project_datawrangling.html#reshaping",
    "href": "01_virginia_election_project_datawrangling.html#reshaping",
    "title": "Virginia Election Project",
    "section": "Reshaping",
    "text": "Reshaping\nEnter pivot_wider().\nWe’ll get rid of everything we don’t need first.\n\ngov_2021 <- gov_2021 %>% \n  filter(ballot_name %in% c(\"Glenn A. Youngkin\", \"Terry R. McAuliffe\")) %>% \n  select(-locality_code,\n         -political_party)\n  \ngov_2021\n\n# A tibble: 266 × 4\n   locality_name    ballot_name        votes percentage\n   <chr>            <chr>              <int> <chr>     \n 1 ACCOMACK COUNTY  Glenn A. Youngkin   7878 61.08%    \n 2 ACCOMACK COUNTY  Terry R. McAuliffe  4948 38.37%    \n 3 ALBEMARLE COUNTY Glenn A. Youngkin  19141 37.21%    \n 4 ALBEMARLE COUNTY Terry R. McAuliffe 31919 62.05%    \n 5 ALEXANDRIA CITY  Glenn A. Youngkin  14013 24.02%    \n 6 ALEXANDRIA CITY  Terry R. McAuliffe 43866 75.20%    \n 7 ALLEGHANY COUNTY Glenn A. Youngkin   4530 74.52%    \n 8 ALLEGHANY COUNTY Terry R. McAuliffe  1518 24.97%    \n 9 AMELIA COUNTY    Glenn A. Youngkin   4720 74.19%    \n10 AMELIA COUNTY    Terry R. McAuliffe  1617 25.42%    \n# … with 256 more rows\n\n\nNow we’ll do the spreading out to reshape.\n\ngov_2021_wide <- gov_2021 %>% \n  pivot_wider(names_from = ballot_name, values_from = c(votes, percentage))\n\ngov_2021_wide\n\n# A tibble: 133 × 5\n   locality_name     `votes_Glenn A. Youngkin` votes_Terry R. …¹ perce…² perce…³\n   <chr>                                 <int>             <int> <chr>   <chr>  \n 1 ACCOMACK COUNTY                        7878              4948 61.08%  38.37% \n 2 ALBEMARLE COUNTY                      19141             31919 37.21%  62.05% \n 3 ALEXANDRIA CITY                       14013             43866 24.02%  75.20% \n 4 ALLEGHANY COUNTY                       4530              1518 74.52%  24.97% \n 5 AMELIA COUNTY                          4720              1617 74.19%  25.42% \n 6 AMHERST COUNTY                         9731              3897 71.00%  28.43% \n 7 APPOMATTOX COUNTY                      5971              1438 80.26%  19.33% \n 8 ARLINGTON COUNTY                      21548             73013 22.63%  76.67% \n 9 AUGUSTA COUNTY                        26196              7231 77.93%  21.51% \n10 BATH COUNTY                            1539               396 79.04%  20.34% \n# … with 123 more rows, and abbreviated variable names\n#   ¹​`votes_Terry R. McAuliffe`, ²​`percentage_Glenn A. Youngkin`,\n#   ³​`percentage_Terry R. McAuliffe`\n\n\nNice.\nThis is giving us some pretty long column names. we can change them after the fact using rename(). But first let’s clean the names to make it easier.\n\ngov_2021_wide <- gov_2021_wide %>% \n  clean_names()\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    votes_glenn_a_youngkin votes_terry_r_mc_aul…¹ perce…² perce…³\n  <chr>                             <int>                  <int> <chr>   <chr>  \n1 ACCOMACK COUNTY                    7878                   4948 61.08%  38.37% \n2 ALBEMARLE COUNTY                  19141                  31919 37.21%  62.05% \n3 ALEXANDRIA CITY                   14013                  43866 24.02%  75.20% \n4 ALLEGHANY COUNTY                   4530                   1518 74.52%  24.97% \n5 AMELIA COUNTY                      4720                   1617 74.19%  25.42% \n6 AMHERST COUNTY                     9731                   3897 71.00%  28.43% \n# … with abbreviated variable names ¹​votes_terry_r_mc_auliffe,\n#   ²​percentage_glenn_a_youngkin, ³​percentage_terry_r_mc_auliffe\n\n\nNow let’s rename, and we’ll use similar names to what we had earlier in our 2021 results.\n\ngov_2021_wide <- gov_2021_wide %>% \n  rename(\n    youngkin = votes_glenn_a_youngkin,\n    mcauliffe = votes_terry_r_mc_auliffe,\n    pct_youngkin = percentage_glenn_a_youngkin,\n    pct_mcauliffe = percentage_terry_r_mc_auliffe\n  )\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    youngkin mcauliffe pct_youngkin pct_mcauliffe\n  <chr>               <int>     <int> <chr>        <chr>        \n1 ACCOMACK COUNTY      7878      4948 61.08%       38.37%       \n2 ALBEMARLE COUNTY    19141     31919 37.21%       62.05%       \n3 ALEXANDRIA CITY     14013     43866 24.02%       75.20%       \n4 ALLEGHANY COUNTY     4530      1518 74.52%       24.97%       \n5 AMELIA COUNTY        4720      1617 74.19%       25.42%       \n6 AMHERST COUNTY       9731      3897 71.00%       28.43%       \n\n\nBingo.\nThere’s still one potential issue here. Can you see it?\nThe percentage columns are actually text values, not numbers. And they have that % sign in the text too. Let’s fix that using a handy function from the readr package, parse_number().\n\ngov_2021_wide <- gov_2021_wide %>% \n  mutate(\n    pct_youngkin = readr::parse_number(pct_youngkin),\n    pct_mcauliffe = readr::parse_number(pct_mcauliffe)\n  )\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    youngkin mcauliffe pct_youngkin pct_mcauliffe\n  <chr>               <int>     <int>        <dbl>         <dbl>\n1 ACCOMACK COUNTY      7878      4948         61.1          38.4\n2 ALBEMARLE COUNTY    19141     31919         37.2          62.0\n3 ALEXANDRIA CITY     14013     43866         24.0          75.2\n4 ALLEGHANY COUNTY     4530      1518         74.5          25.0\n5 AMELIA COUNTY        4720      1617         74.2          25.4\n6 AMHERST COUNTY       9731      3897         71            28.4\n\n\nPerfect. Problem solved."
  },
  {
    "objectID": "01_virginia_election_project_datawrangling.html#comparing-gov-vs.-prez-results",
    "href": "01_virginia_election_project_datawrangling.html#comparing-gov-vs.-prez-results",
    "title": "Virginia Election Project",
    "section": "Comparing gov vs. prez results",
    "text": "Comparing gov vs. prez results\nNow that things are join, let’s actually go ahead and start making columns to compare the two elections and how the candidates did this time compared with last time.\nWhere should we go from here….? Give it a shot…\n\njoined_vacomparison%>%\nmutate(mc_overperform = pct_mcauliffe - biden_pct, mc_overperform_worsethan5 = if_else(mc_overperform < -5, \"YES\", \"NO\"))\n\n# A tibble: 133 × 11\n   locality  biden trump biden…¹ trump…² young…³ mcaul…⁴ pct_y…⁵ pct_m…⁶ mc_ov…⁷\n   <chr>     <dbl> <dbl>   <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>   <dbl>\n 1 ACCOMAC…   7578  9172    44.7    54.1    7878    4948    61.1    38.4   -6.31\n 2 ALBEMAR…  42466 20804    65.7    32.2   19141   31919    37.2    62.0   -3.63\n 3 ALEXAND…  66240 14544    80.3    17.6   14013   43866    24.0    75.2   -5.08\n 4 ALLEGHA…   2243  5859    27.3    71.4    4530    1518    74.5    25.0   -2.37\n 5 AMELIA …   2411  5390    30.6    68.3    4720    1617    74.2    25.4   -5.13\n 6 AMHERST…   5672 11041    33.4    64.9    9731    3897    71      28.4   -4.92\n 7 APPOMAT…   2418  6702    26.1    72.3    5971    1438    80.3    19.3   -6.76\n 8 ARLINGT… 105344 22318    80.6    17.1   21548   73013    22.6    76.7   -3.93\n 9 AUGUSTA…  10840 30714    25.6    72.6   26196    7231    77.9    21.5   -4.13\n10 BATH CO…    646  1834    25.8    73.3    1539     396    79.0    20.3   -5.49\n# … with 123 more rows, 1 more variable: mc_overperform_worsethan5 <chr>, and\n#   abbreviated variable names ¹​biden_pct, ²​trump_pct, ³​youngkin, ⁴​mcauliffe,\n#   ⁵​pct_youngkin, ⁶​pct_mcauliffe, ⁷​mc_overperform\n\n\n\nsaveRDS(joined_vacomparison, here(\"processed_data\", \"joined_vacomparison.rds\"))\nwrite_csv(joined_vacomparison, here(\"processed_data\", \"joined_vacomparison.csv\"))"
  },
  {
    "objectID": "Election in Class Exercise.html",
    "href": "Election in Class Exercise.html",
    "title": "Election in Class Exercise",
    "section": "",
    "text": "Data available here: https://historical.elections.virginia.gov/elections/view/144567/\nAK COMMENT: The reason it wasn’t recognizing the joined_vacomparison name below is that you haven’t actually imported the data into the script? In other words, you brought the files in to the project - so that’s good. But you then also need to tell the R script that the file exists and to import the data in to it. Like this:\n\njoined_vacomparison <- readRDS(\"joined_vacomparison.rds\")\n\n\njoined_vacomparison%>%\nmutate(mc_overperform = pct_mcauliffe - biden_pct, mc_overperform_worsethan10 = if_else(mc_overperform < -10, \"YES\", \"NO\"))\n\n# A tibble: 133 × 11\n   locality  biden trump biden…¹ trump…² young…³ mcaul…⁴ pct_y…⁵ pct_m…⁶ mc_ov…⁷\n   <chr>     <dbl> <dbl>   <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>   <dbl>\n 1 ACCOMAC…   7578  9172    44.7    54.1    7878    4948    61.1    38.4   -6.31\n 2 ALBEMAR…  42466 20804    65.7    32.2   19141   31919    37.2    62.0   -3.63\n 3 ALEXAND…  66240 14544    80.3    17.6   14013   43866    24.0    75.2   -5.08\n 4 ALLEGHA…   2243  5859    27.3    71.4    4530    1518    74.5    25.0   -2.37\n 5 AMELIA …   2411  5390    30.6    68.3    4720    1617    74.2    25.4   -5.13\n 6 AMHERST…   5672 11041    33.4    64.9    9731    3897    71      28.4   -4.92\n 7 APPOMAT…   2418  6702    26.1    72.3    5971    1438    80.3    19.3   -6.76\n 8 ARLINGT… 105344 22318    80.6    17.1   21548   73013    22.6    76.7   -3.93\n 9 AUGUSTA…  10840 30714    25.6    72.6   26196    7231    77.9    21.5   -4.13\n10 BATH CO…    646  1834    25.8    73.3    1539     396    79.0    20.3   -5.49\n# … with 123 more rows, 1 more variable: mc_overperform_worsethan10 <chr>, and\n#   abbreviated variable names ¹​biden_pct, ²​trump_pct, ³​youngkin, ⁴​mcauliffe,\n#   ⁵​pct_youngkin, ⁶​pct_mcauliffe, ⁷​mc_overperform\n\n\n\njoined_vacomparison%>%\nmutate(mc_overperform = biden_pct - pct_mcauliffe, mc_overperform_worsethan15 = if_else(mc_overperform < -15, \"YES\", \"NO\"))\n\n# A tibble: 133 × 11\n   locality  biden trump biden…¹ trump…² young…³ mcaul…⁴ pct_y…⁵ pct_m…⁶ mc_ov…⁷\n   <chr>     <dbl> <dbl>   <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>   <dbl>\n 1 ACCOMAC…   7578  9172    44.7    54.1    7878    4948    61.1    38.4    6.31\n 2 ALBEMAR…  42466 20804    65.7    32.2   19141   31919    37.2    62.0    3.63\n 3 ALEXAND…  66240 14544    80.3    17.6   14013   43866    24.0    75.2    5.08\n 4 ALLEGHA…   2243  5859    27.3    71.4    4530    1518    74.5    25.0    2.37\n 5 AMELIA …   2411  5390    30.6    68.3    4720    1617    74.2    25.4    5.13\n 6 AMHERST…   5672 11041    33.4    64.9    9731    3897    71      28.4    4.92\n 7 APPOMAT…   2418  6702    26.1    72.3    5971    1438    80.3    19.3    6.76\n 8 ARLINGT… 105344 22318    80.6    17.1   21548   73013    22.6    76.7    3.93\n 9 AUGUSTA…  10840 30714    25.6    72.6   26196    7231    77.9    21.5    4.13\n10 BATH CO…    646  1834    25.8    73.3    1539     396    79.0    20.3    5.49\n# … with 123 more rows, 1 more variable: mc_overperform_worsethan15 <chr>, and\n#   abbreviated variable names ¹​biden_pct, ²​trump_pct, ³​youngkin, ⁴​mcauliffe,\n#   ⁵​pct_youngkin, ⁶​pct_mcauliffe, ⁷​mc_overperform"
  },
  {
    "objectID": "portfolio.html",
    "href": "portfolio.html",
    "title": "Portfolio",
    "section": "",
    "text": "Hi there this is my portfolio page!\nHere is my resume.\nhttps://10e6d70d378a446a80359e47bca43ac9.app.posit.cloud/file_show?path=%2Fcloud%2Fproject%2FZazni+Vlijter+Resume+08.22.22.pdf"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "My name is Zazni Vlijter and I am a professional in strategic communications. I was born and raised in NYC where I went to Special Music School High School as a vocal major. I am currently a senior at The George Washington University majoring in English with a minor in Journalism and Mass Communications and Criminal Justice.\n```"
  }
]