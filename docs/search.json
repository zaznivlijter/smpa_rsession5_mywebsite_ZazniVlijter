[
  {
    "objectID": "Election in Class Exercise.html",
    "href": "Election in Class Exercise.html",
    "title": "Election in Class Exercise",
    "section": "",
    "text": "Data available here: https://historical.elections.virginia.gov/elections/view/144567/\n\njoined_vacomparison <- readRDS(\"joined_vacomparison.rds\")\n\n\njoined_vacomparison%>%\nmutate(mc_overperform = pct_mcauliffe - biden_pct, mc_overperform_worsethan10 = if_else(mc_overperform < -10, \"YES\", \"NO\"))\n\n# A tibble: 133 × 11\n   locality  biden trump biden…¹ trump…² young…³ mcaul…⁴ pct_y…⁵ pct_m…⁶ mc_ov…⁷\n   <chr>     <dbl> <dbl>   <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>   <dbl>\n 1 ACCOMAC…   7578  9172    44.7    54.1    7878    4948    61.1    38.4   -6.31\n 2 ALBEMAR…  42466 20804    65.7    32.2   19141   31919    37.2    62.0   -3.63\n 3 ALEXAND…  66240 14544    80.3    17.6   14013   43866    24.0    75.2   -5.08\n 4 ALLEGHA…   2243  5859    27.3    71.4    4530    1518    74.5    25.0   -2.37\n 5 AMELIA …   2411  5390    30.6    68.3    4720    1617    74.2    25.4   -5.13\n 6 AMHERST…   5672 11041    33.4    64.9    9731    3897    71      28.4   -4.92\n 7 APPOMAT…   2418  6702    26.1    72.3    5971    1438    80.3    19.3   -6.76\n 8 ARLINGT… 105344 22318    80.6    17.1   21548   73013    22.6    76.7   -3.93\n 9 AUGUSTA…  10840 30714    25.6    72.6   26196    7231    77.9    21.5   -4.13\n10 BATH CO…    646  1834    25.8    73.3    1539     396    79.0    20.3   -5.49\n# … with 123 more rows, 1 more variable: mc_overperform_worsethan10 <chr>, and\n#   abbreviated variable names ¹​biden_pct, ²​trump_pct, ³​youngkin, ⁴​mcauliffe,\n#   ⁵​pct_youngkin, ⁶​pct_mcauliffe, ⁷​mc_overperform\n\n\n\njoined_vacomparison%>%\nmutate(mc_overperform = biden_pct - pct_mcauliffe, mc_overperform_worsethan15 = if_else(mc_overperform < -15, \"YES\", \"NO\"))\n\n# A tibble: 133 × 11\n   locality  biden trump biden…¹ trump…² young…³ mcaul…⁴ pct_y…⁵ pct_m…⁶ mc_ov…⁷\n   <chr>     <dbl> <dbl>   <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>   <dbl>\n 1 ACCOMAC…   7578  9172    44.7    54.1    7878    4948    61.1    38.4    6.31\n 2 ALBEMAR…  42466 20804    65.7    32.2   19141   31919    37.2    62.0    3.63\n 3 ALEXAND…  66240 14544    80.3    17.6   14013   43866    24.0    75.2    5.08\n 4 ALLEGHA…   2243  5859    27.3    71.4    4530    1518    74.5    25.0    2.37\n 5 AMELIA …   2411  5390    30.6    68.3    4720    1617    74.2    25.4    5.13\n 6 AMHERST…   5672 11041    33.4    64.9    9731    3897    71      28.4    4.92\n 7 APPOMAT…   2418  6702    26.1    72.3    5971    1438    80.3    19.3    6.76\n 8 ARLINGT… 105344 22318    80.6    17.1   21548   73013    22.6    76.7    3.93\n 9 AUGUSTA…  10840 30714    25.6    72.6   26196    7231    77.9    21.5    4.13\n10 BATH CO…    646  1834    25.8    73.3    1539     396    79.0    20.3    5.49\n# … with 123 more rows, 1 more variable: mc_overperform_worsethan15 <chr>, and\n#   abbreviated variable names ¹​biden_pct, ²​trump_pct, ³​youngkin, ⁴​mcauliffe,\n#   ⁵​pct_youngkin, ⁶​pct_mcauliffe, ⁷​mc_overperform"
  },
  {
    "objectID": "Example News Story.html",
    "href": "Example News Story.html",
    "title": "News Story",
    "section": "",
    "text": "Here is an example of a news story done during my time at GWU\nZazni Vlijter Advanced News Reporting Student Feature Story\nAn English major at George Washington University is not the student you think of when describing an average student studying in the nation’s capital. However, D.C. native Kayla Laws has shown the dynamic between high profile connections and finding your own passions.\nAfter spending each holiday and school year living in Washington D.C., surrounded by the hustle and bustle of politicians picking their children up from school, making friends with children of high political status, Laws moved to Maryland.\nAccording to Laws, her family’s decision to move to Maryland came later in her life. However, with her roots grounded in D.C. with four generations of Washingtonians, Laws found packing up her 18 years of D.C. living to move to Maryland during her freshman year of college.\n20 year old Kayla Laws, is a Africana Studies and English student at the George Washington University, minoring in Journalism and Mass Communications. Her love of D.C. brought her to GW and as she reflects on her childhood, she recalls the unique experience of living in the country’s capital.\n“When you’re young you don’t know who is who, but your parents do,” said Laws when asked about high profile families she grew up with.\nLaws said that learning at GW is a different experience in comparison to many others because of how public figures are mentioned. Many politicians mentioned in classes she has met personally and knows their families.\nLaws painted the picture of the lavish lifestyles of the political elites including Tucker Carlson, the father of her good friend. Maids and chefs served in the house on a daily basis, while Laws and other children went on about their playdates.\n“I never questioned it, I was a shy kid and I didn’t like playdates,” said Laws. “They were just very different lifestyles.”\nLaws’ distinctive childhood was a result of generations of family members born and raised in the nation’s capital.\n“My family is from North Carolina and Mississippi. They moved up north because there were better opportunities for the African American population,” said Laws.\nAfter recalling the numerous activities she tried throughout her childhood, she said that writing was one of the activities her parents encouraged her to do as well as making connections.\nSince her upbringing in D.C., Laws has been published in Emerging Voices vol 1 and other publications that highlight young voices.\nI love Maya Anglou’s work, especially The Bluest Eye, said Laws. Passionate about poems and short stories, Laws remains inspired by the work of Angelou.\nThe English path didn’t deter me, however, I knew writing couldn’t take me to where I wanted to be, said laws.\nLaws has future plans of becoming an author and going to law school after graduating from George Washington University.\nLaws hopes to stay in D.C. cementing herself in the roots of her childhood and family.“D.C. is where I’m from, it’s where I grew up,” said Laws."
  },
  {
    "objectID": "Filtering Walkthrough.html",
    "href": "Filtering Walkthrough.html",
    "title": "Walkthrough",
    "section": "",
    "text": "When you are trying to sort and filter out certain works and information, it is important to know which exact functions you should use in order to ensure that you get the information that you’re looking for. I will walk you through the steps to sort out information from a data set by using the filter function.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n\n\n\nGA_votedemos_2016_gen <- readRDS(\"GA_votedemos_2016_gen.rds\")\n\nFirst we will be using Georgia’s voting data from 2016:\nUse the function head() to load in the data and give you a snapshot of what the data looks like:\n\nhead(GA_votedemos_2016_gen)\n\n# A tibble: 6 × 70\n  elexy…¹ elext…² county count…³ black…⁴ black…⁵ black…⁶ black…⁷ black…⁸ black…⁹\n    <dbl> <chr>   <chr>  <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1    2016 general APPLI… 001         954     393    41.2    1247     692    55.5\n2    2016 general ATKIN… 002         396     200    50.5     527     310    58.8\n3    2016 general BACON  003         343     106    30.9     566     267    47.2\n4    2016 general BAKER  004         425     225    52.9     557     365    65.5\n5    2016 general BALDW… 005        4160    2225    53.5    6028    4078    67.6\n6    2016 general BANKS  006         111      49    44.1      84      43    51.2\n# … with 60 more variables: black_unknown_registered <dbl>,\n#   black_unknown_voted <dbl>, black_unknown_pct <dbl>,\n#   white_male_registered <dbl>, white_male_voted <dbl>, white_male_pct <dbl>,\n#   white_female_registered <dbl>, white_female_voted <dbl>,\n#   white_female_pct <dbl>, white_unknown_registered <dbl>,\n#   white_unknown_voted <dbl>, white_unknown_pct <dbl>,\n#   asian_male_registered <dbl>, asian_male_voted <dbl>, …\n\n\nSo now we have our data loaded in. But lets say I only want information from the general elections\n\nfilter(GA_votedemos_2016_gen, elextype == \"general\")\n\n# A tibble: 159 × 70\n   elexyear elextype county   county_c…¹ black…² black…³ black…⁴ black…⁵ black…⁶\n      <dbl> <chr>    <chr>    <chr>        <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1     2016 general  APPLING  001            954     393    41.2    1247     692\n 2     2016 general  ATKINSON 002            396     200    50.5     527     310\n 3     2016 general  BACON    003            343     106    30.9     566     267\n 4     2016 general  BAKER    004            425     225    52.9     557     365\n 5     2016 general  BALDWIN  005           4160    2225    53.5    6028    4078\n 6     2016 general  BANKS    006            111      49    44.1      84      43\n 7     2016 general  BARROW   007           2135    1059    49.6    2822    1860\n 8     2016 general  BARTOW   008           2698    1181    43.8    3521    2002\n 9     2016 general  BEN HILL 009           1299     578    44.5    2103    1235\n10     2016 general  BERRIEN  010            481     218    45.3     634     348\n# … with 149 more rows, 61 more variables: black_female_pct <dbl>,\n#   black_unknown_registered <dbl>, black_unknown_voted <dbl>,\n#   black_unknown_pct <dbl>, white_male_registered <dbl>,\n#   white_male_voted <dbl>, white_male_pct <dbl>,\n#   white_female_registered <dbl>, white_female_voted <dbl>,\n#   white_female_pct <dbl>, white_unknown_registered <dbl>,\n#   white_unknown_voted <dbl>, white_unknown_pct <dbl>, …\n\n\nNow that we have all the information from the general elections, then I may want to filter this even more to be more specific. Lets say out of this data set I only want to know about Banks County. I would use %>% to connect my two functions and filter out of the data I just filtered.\n\nfilter(GA_votedemos_2016_gen, elextype == \"general\") %>%\nfilter(county == \"BANKS\")\n\n# A tibble: 1 × 70\n  elexy…¹ elext…² county count…³ black…⁴ black…⁵ black…⁶ black…⁷ black…⁸ black…⁹\n    <dbl> <chr>   <chr>  <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1    2016 general BANKS  006         111      49    44.1      84      43    51.2\n# … with 60 more variables: black_unknown_registered <dbl>,\n#   black_unknown_voted <dbl>, black_unknown_pct <dbl>,\n#   white_male_registered <dbl>, white_male_voted <dbl>, white_male_pct <dbl>,\n#   white_female_registered <dbl>, white_female_voted <dbl>,\n#   white_female_pct <dbl>, white_unknown_registered <dbl>,\n#   white_unknown_voted <dbl>, white_unknown_pct <dbl>,\n#   asian_male_registered <dbl>, asian_male_voted <dbl>, …"
  },
  {
    "objectID": "walkthrough.html",
    "href": "walkthrough.html",
    "title": "Zazni Vlijter's Website",
    "section": "",
    "text": "title: “Analysis Walkthrough Example” author: “Zazni Vlijter” format: html: self-contained: true code-fold: true code-tools: true\n\nLoad the datasets\n\n\nExercises\n\n\n\nJoin together the election results and urban/suburban/rural tables above, and then use the merged table to:\n\nfilter for just Virginia\ngroup_by and summarize to calculate the mean pct of Trump 2020 vote (pct_r_2020) by urban/rural categories (rural_urban)\n\n\nfull_join(counties_elexresults,counties_rural_urban_suburban)%>%\nfilter(state_code == \"VA\")%>% \ngroup_by(rural_urban)%>%\nsummarise(averagevotes = mean(pct_r_2020))\n\nJoining with `by = join_by(geoid)`\n\n\n# A tibble: 6 × 2\n  rural_urban   averagevotes\n  <fct>                <dbl>\n1 Large central         24.5\n2 Large fringe          48.2\n3 Medium                66.8\n4 Small                 52.5\n5 Micropolitan          65.0\n6 Noncore               61.8\n\n\n\n\n\nUsing the joined election results / urban/suburban/rural table created above:\n\nfilter for just Virginia\ncount up how many counties were won by party in 2020 (winner_2020) by urban/rural categories\n\n\nfull_join(counties_elexresults, counties_rural_urban_suburban)%>%\nfilter(state_code == \"VA\")%>% \ngroup_by(rural_urban)%>%\ncount(winner_2020)\n\nJoining with `by = join_by(geoid)`\n\n\n# A tibble: 11 × 3\n# Groups:   rural_urban [6]\n   rural_urban   winner_2020     n\n   <fct>         <chr>       <int>\n 1 Large central D               5\n 2 Large fringe  D              22\n 3 Large fringe  R              22\n 4 Medium        D               2\n 5 Medium        R              12\n 6 Small         D               7\n 7 Small         R              11\n 8 Micropolitan  D               2\n 9 Micropolitan  R               6\n10 Noncore       D               8\n11 Noncore       R              36\n\n\n\n\n\nJoin together the election results and demographics tables above, and then use the joined table to:\n\nfilter for just Florida\ngroup/summarize to calculate the mean pct of Trump 2020 vote in the counties above or below national average for college graduates (pct_ed_college_all_abovebelow_natl)\n\n\ninner_join(counties_demographics, counties_elexresults)%>%\nfilter(state_code == \"FL\")%>%\ngroup_by(pct_ed_college_all_abovebelow_natl)%>%\nsummarize(averagevotes = mean(pct_r_2020))\n\nJoining with `by = join_by(geoid, pct_d_2020, pct_r_2020, pct_d_2016,\npct_r_2016)`\n\n\n# A tibble: 2 × 2\n  pct_ed_college_all_abovebelow_natl averagevotes\n  <chr>                                     <dbl>\n1 ABOVE                                      48.0\n2 BELOW                                      66.7\n\n\n\n\n\nUsing the joined table you made above:\n\ngroup/summarize to calculate the mean pct of Trump 2020 vote by counties above or below the national average for college graduates (pct_ed_college_all_abovebelow_natl).\nNote we’re looking for the entire country here.\n\n\ninner_join(counties_demographics, counties_elexresults)%>%\ngroup_by(pct_ed_college_all_abovebelow_natl)%>%\nsummarize(averagevotes = mean(pct_r_2020))\n\nJoining with `by = join_by(geoid, pct_d_2020, pct_r_2020, pct_d_2016,\npct_r_2016)`\n\n\n# A tibble: 2 × 2\n  pct_ed_college_all_abovebelow_natl averagevotes\n  <chr>                                     <dbl>\n1 ABOVE                                      45.0\n2 BELOW                                      68.2\n\n\nNow using the joined datasets above, come up with two groupings you find interesting or newsworthy in a particular state, and replicate the steps above them them instead.\n\n\n\n\ninner_join(counties_demographics, counties_elexresults)%>%\ngroup_by(pct_mil_veteran)%>%\nsummarize(averagevotes = mean(pct_r_2020))\n\nJoining with `by = join_by(geoid, pct_d_2020, pct_r_2020, pct_d_2016,\npct_r_2016)`\n\n\n# A tibble: 980 × 2\n   pct_mil_veteran averagevotes\n             <dbl>        <dbl>\n 1            0            65.5\n 2            0.82         32.5\n 3            1.28         44.8\n 4            1.82         50.9\n 5            1.98         47.1\n 6            2.04         26.3\n 7            2.13         12.3\n 8            2.19         31  \n 9            2.2          95  \n10            2.24         27  \n# … with 970 more rows\n\n\n\n\n\n\ninner_join(counties_demographics, counties_elexresults)%>%\ngroup_by(pct_ed_college_all)%>%\nsummarize(averagevotes = mean(pct_r_2020))\n\nJoining with `by = join_by(geoid, pct_d_2020, pct_r_2020, pct_d_2016,\npct_r_2016)`\n\n\n# A tibble: 1,894 × 2\n   pct_ed_college_all averagevotes\n                <dbl>        <dbl>\n 1               0            90.9\n 2               1.48         65.5\n 3               3.4          45.6\n 4               5.22         62.5\n 5               5.74         38.8\n 6               6.56         70.4\n 7               6.74         55.5\n 8               6.84         78.9\n 9               6.86         90.2\n10               6.97         65.2\n# … with 1,884 more rows\n\n\n\nExtra credit\n\nUp until now we’ve joined two tables together. But we actually have three tables in this project. How might we join all three together into a single table, so all the measures for each county are combined in one place? (Hint: you can do this is multiple steps, doesn’t have to be one step only.)\n\nfull_join(counties_elexresults, counties_rural_urban_suburban)%>% full_join(counties_demographics)\n\nJoining with `by = join_by(geoid)`\nJoining with `by = join_by(geoid, pct_d_2020, pct_r_2020, pct_d_2016,\npct_r_2016, county, county_name, state_code)`\n\n\n# A tibble: 3,112 × 38\n   geoid total…¹ democ…² repub…³ pct_d…⁴ pct_r…⁵ winne…⁶ margi…⁷ total…⁸ democ…⁹\n   <chr>   <int>   <int>   <int>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>\n 1 01001   27691    7503   19838    27.1    71.6 R          44.5   24973    5936\n 2 01003  109351   24578   83544    22.5    76.4 R          53.9   95215   18458\n 3 01005   10506    4816    5622    45.8    53.5 R           7.7   10469    4871\n 4 01007    9585    1986    7525    20.7    78.5 R          57.8    8819    1874\n 5 01009   27560    2640   24711     9.6    89.7 R          80.1   25588    2156\n 6 01011    4611    3446    1146    74.7    24.9 D          49.8    4710    3530\n 7 01013    9482    3965    5458    41.8    57.6 R          15.8    8732    3726\n 8 01015   50870   15216   35101    29.9    69   R          39.1   47864   13242\n 9 01017   15259    6365    8753    41.7    57.4 R          15.7   13900    5784\n10 01019   12289    1624   10583    13.2    86.1 R          72.9   10733    1547\n# … with 3,102 more rows, 28 more variables: republican_2016 <dbl>,\n#   winner_2016 <chr>, pct_d_2016 <dbl>, pct_r_2016 <dbl>, margin_2016 <dbl>,\n#   county <chr>, county_name <chr>, state_code <chr>, rural_urban <fct>,\n#   state_name <chr>, pct_born_foreign <dbl>, pct_mil_veteran <dbl>,\n#   pct_race_nonwhite <dbl>, pct_ed_college_all <dbl>,\n#   pct_ed_college_white <dbl>, pct_ed_college_white_male <dbl>,\n#   pct_ed_college_white_female <dbl>, …"
  },
  {
    "objectID": "Maps.html",
    "href": "Maps.html",
    "title": "Mapping Sample of New York and Election Work",
    "section": "",
    "text": "Here is an example of an interactive county census map in New York!\n\nknitr::opts_chunk$set(echo = TRUE)\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n\nlibrary(tigris)\n\nTo enable caching of data, set `options(tigris_use_cache = TRUE)`\nin your R script or .Rprofile.\n\nlibrary(sf)\n\nLinking to GEOS 3.8.0, GDAL 3.0.4, PROJ 6.3.1; sf_use_s2() is TRUE\n\nlibrary(tmap)\nlibrary(tmaptools)\nlibrary(htmltools)\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(rmapshaper)\nlibrary(here)\n\nhere() starts at /cloud/project\n\noptions(tigris_class = \"sf\")\nknitr::opts_chunk$set(echo = TRUE)\n\n\n\n\n\n\nlibrary(tidyverse)\nlibrary(tigris)\nlibrary(sf)\nlibrary(tidycensus)\nlibrary(htmltools)\nlibrary(janitor)\nlibrary(here)\nlibrary(mapview)\nlibrary(leafsync)\nlibrary(leaflet.extras2)\n\nLoading required package: leaflet\n\noptions(tigris_class = \"sf\")\n\n\nInteractive Maps with MapView Package\nA h/t to Sharon Machlis for turning people on to the Mapview package, and her excellent walkthroughs of it.\nFor the data tonight we’ll be using the tidycensus package to pull both census data, as well as geospatial boundaries. Let’s quickly review how we use it.\n\n# uncomment to run, then recomment it out so you don't run it every time\n\n# census_api_key(\"APIKEYCODE\", install=TRUE)\n\n\n#chose variables we want\nmyvars <- c(totalpop = \"B01003_001\",\n            medincome = \"B19013_001\",\n            medage = \"B01002_001\"\n)\n\n\n#pull for NY counties\nny_counties_withgeo <- get_acs(geography = \"county\",\n                       variables = c(myvars),\n                       state = \"NY\",\n                       output = \"wide\",\n                       geometry = TRUE)\n\nGetting data from the 2017-2021 5-year ACS\n\n\nWarning: • You have not set a Census API key. Users without a key are limited to 500\nqueries per day and may experience performance limitations.\nℹ For best results, get a Census API key at\nhttp://api.census.gov/data/key_signup.html and then supply the key to the\n`census_api_key()` function to use it throughout your tidycensus session.\nThis warning is displayed once per session.\n\n\nDownloading feature geometry from the Census website.  To cache shapefiles for use in future sessions, set `options(tigris_use_cache = TRUE)`.\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |                                                                      |   1%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |==                                                                    |   4%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |===                                                                   |   5%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |=================                                                     |  25%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |===============================                                       |  45%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |===================================                                   |  49%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |=====================================                                 |  54%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |=========================================                             |  58%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |============================================                          |  62%\n  |                                                                            \n  |=============================================                         |  65%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |===================================================                   |  74%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |==========================================================            |  82%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |=================================================================     |  92%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |==================================================================    |  95%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |====================================================================  |  98%\n  |                                                                            \n  |======================================================================| 100%\n\nny_counties_withgeo\n\nSimple feature collection with 62 features and 8 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -79.76215 ymin: 40.4961 xmax: -71.85621 ymax: 45.01585\nGeodetic CRS:  NAD83\nFirst 10 features:\n   GEOID                         NAME totalpopE totalpopM medincomeE medincomeM\n1  36017    Chenango County, New York     47407        NA      55690       2603\n2  36119 Westchester County, New York    999723        NA     105387       1643\n3  36025    Delaware County, New York     44644        NA      52757       2293\n4  36115  Washington County, New York     61504        NA      63869       2006\n5  36075      Oswego County, New York    118019        NA      61983       2218\n6  36067    Onondaga County, New York    474621        NA      66012       1000\n7  36113      Warren County, New York     65692        NA      68765       3677\n8  36051  Livingston County, New York     62253        NA      64467       2308\n9  36009 Cattaraugus County, New York     77211        NA      53537       1681\n10 36105    Sullivan County, New York     78230        NA      63393       2692\n   medageE medageM                       geometry\n1     44.7     0.2 MULTIPOLYGON (((-75.88983 4...\n2     41.2     0.2 MULTIPOLYGON (((-73.77278 4...\n3     48.5     0.3 MULTIPOLYGON (((-75.42264 4...\n4     44.4     0.3 MULTIPOLYGON (((-73.63622 4...\n5     40.7     0.4 MULTIPOLYGON (((-76.61693 4...\n6     39.3     0.2 MULTIPOLYGON (((-76.49931 4...\n7     46.8     0.3 MULTIPOLYGON (((-74.21462 4...\n8     41.7     0.5 MULTIPOLYGON (((-78.06075 4...\n9     42.3     0.4 MULTIPOLYGON (((-79.05908 4...\n10    42.3     0.4 MULTIPOLYGON (((-75.14468 4...\n\n\n\n#all counties in the US\nall_counties_withgeo <- get_acs(geography = \"county\",\n                       variables = c(myvars),\n                       output = \"wide\",\n                       geometry = TRUE)\n\nGetting data from the 2017-2021 5-year ACS\n\n\nDownloading feature geometry from the Census website.  To cache shapefiles for use in future sessions, set `options(tigris_use_cache = TRUE)`.\n\nall_counties_withgeo\n\nSimple feature collection with 3221 features and 8 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -179.1489 ymin: 17.88328 xmax: 179.7785 ymax: 71.36516\nGeodetic CRS:  NAD83\nFirst 10 features:\n   GEOID                              NAME totalpopE totalpopM medincomeE\n1  20161              Riley County, Kansas     72602        NA      53296\n2  19159             Ringgold County, Iowa      4739        NA      57700\n3  30009            Carbon County, Montana     10488        NA      63178\n4  16007           Bear Lake County, Idaho      6327        NA      60337\n5  55011         Buffalo County, Wisconsin     13314        NA      61167\n6  31185             York County, Nebraska     14164        NA      66337\n7  08037            Eagle County, Colorado     55693        NA      91338\n8  42129 Westmoreland County, Pennsylvania    355107        NA      64708\n9  40079         Le Flore County, Oklahoma     48436        NA      43049\n10 48053              Burnet County, Texas     48424        NA      65363\n   medincomeM medageE medageM                       geometry\n1        2489    25.5     0.1 MULTIPOLYGON (((-96.96095 3...\n2        5058    44.3     1.0 MULTIPOLYGON (((-94.47167 4...\n3        4261    50.7     0.9 MULTIPOLYGON (((-109.7987 4...\n4        7039    38.9     1.1 MULTIPOLYGON (((-111.6345 4...\n5        2352    46.5     0.5 MULTIPOLYGON (((-92.08384 4...\n6        4128    39.5     1.2 MULTIPOLYGON (((-97.82629 4...\n7        4058    37.8     0.8 MULTIPOLYGON (((-107.1137 3...\n8        1350    47.1     0.2 MULTIPOLYGON (((-79.90487 4...\n9        1869    38.8     0.3 MULTIPOLYGON (((-95.05996 3...\n10       4694    44.7     0.3 MULTIPOLYGON (((-98.45924 3...\n\n\n\n#remove MOE columns - they all end with \"M\"\nny_counties_withgeo <- ny_counties_withgeo %>%\n  select(-ends_with(\"M\"))\n\nny_counties_withgeo\n\nSimple feature collection with 62 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -79.76215 ymin: 40.4961 xmax: -71.85621 ymax: 45.01585\nGeodetic CRS:  NAD83\nFirst 10 features:\n   GEOID                         NAME totalpopE medincomeE medageE\n1  36017    Chenango County, New York     47407      55690    44.7\n2  36119 Westchester County, New York    999723     105387    41.2\n3  36025    Delaware County, New York     44644      52757    48.5\n4  36115  Washington County, New York     61504      63869    44.4\n5  36075      Oswego County, New York    118019      61983    40.7\n6  36067    Onondaga County, New York    474621      66012    39.3\n7  36113      Warren County, New York     65692      68765    46.8\n8  36051  Livingston County, New York     62253      64467    41.7\n9  36009 Cattaraugus County, New York     77211      53537    42.3\n10 36105    Sullivan County, New York     78230      63393    42.3\n                         geometry\n1  MULTIPOLYGON (((-75.88983 4...\n2  MULTIPOLYGON (((-73.77278 4...\n3  MULTIPOLYGON (((-75.42264 4...\n4  MULTIPOLYGON (((-73.63622 4...\n5  MULTIPOLYGON (((-76.61693 4...\n6  MULTIPOLYGON (((-76.49931 4...\n7  MULTIPOLYGON (((-74.21462 4...\n8  MULTIPOLYGON (((-78.06075 4...\n9  MULTIPOLYGON (((-79.05908 4...\n10 MULTIPOLYGON (((-75.14468 4...\n\n\n\n#remove that trailing \"E\"\ncolnames(ny_counties_withgeo) <- sub(\"E$\", \"\", colnames(ny_counties_withgeo)) # $ means end of string only\n\nny_counties_withgeo\n\nSimple feature collection with 62 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -79.76215 ymin: 40.4961 xmax: -71.85621 ymax: 45.01585\nGeodetic CRS:  NAD83\nFirst 10 features:\n   GEOID                          NAM totalpop medincome medage\n1  36017    Chenango County, New York    47407     55690   44.7\n2  36119 Westchester County, New York   999723    105387   41.2\n3  36025    Delaware County, New York    44644     52757   48.5\n4  36115  Washington County, New York    61504     63869   44.4\n5  36075      Oswego County, New York   118019     61983   40.7\n6  36067    Onondaga County, New York   474621     66012   39.3\n7  36113      Warren County, New York    65692     68765   46.8\n8  36051  Livingston County, New York    62253     64467   41.7\n9  36009 Cattaraugus County, New York    77211     53537   42.3\n10 36105    Sullivan County, New York    78230     63393   42.3\n                         geometry\n1  MULTIPOLYGON (((-75.88983 4...\n2  MULTIPOLYGON (((-73.77278 4...\n3  MULTIPOLYGON (((-75.42264 4...\n4  MULTIPOLYGON (((-73.63622 4...\n5  MULTIPOLYGON (((-76.61693 4...\n6  MULTIPOLYGON (((-76.49931 4...\n7  MULTIPOLYGON (((-74.21462 4...\n8  MULTIPOLYGON (((-78.06075 4...\n9  MULTIPOLYGON (((-79.05908 4...\n10 MULTIPOLYGON (((-75.14468 4...\n\n\nMapping Virginia counties with mapview\n\nmapview(ny_counties_withgeo, zcol = \"medincome\")\n\n\n\n\n\n\nCustomize colors\n\nmapview(ny_counties_withgeo, zcol = \"medincome\", \n         col.regions = RColorBrewer::brewer.pal(9, \"Greens\"), \n         alpha.regions = 1)\n\nWarning: Found less unique colors (9) than unique zcol values (62)! \nInterpolating color vector to match number of zcol values.\n\n\n\n\n\n\n\nThis map’s dark background appeared automatically, because mapview determined the map included a lot of light colors. You can turn off that feature.\n\nmapviewOptions(\"basemaps.color.shuffle\" = FALSE)\n\n\nmapview(ny_counties_withgeo, zcol = \"medincome\", \n         col.regions = RColorBrewer::brewer.pal(9, \"Greens\"), \n         alpha.regions = 1)\n\nWarning: Found less unique colors (9) than unique zcol values (62)! \nInterpolating color vector to match number of zcol values.\n\n\n\n\n\n\n\nTwo maps together\n\nmap_income <- mapview(ny_counties_withgeo, zcol = \"medincome\", \n         col.regions = RColorBrewer::brewer.pal(9, \"Greens\"), \n         alpha.regions = 1)\n\nWarning: Found less unique colors (9) than unique zcol values (62)! \nInterpolating color vector to match number of zcol values.\n\nmap_age <- mapview(ny_counties_withgeo, zcol = \"medage\", \n         col.regions = RColorBrewer::brewer.pal(9, \"Greens\"), \n         alpha.regions = 1)\n\nWarning: Found less unique colors (9) than unique zcol values (51)! \nInterpolating color vector to match number of zcol values.\n\n\n\nsync(map_income, map_age)\n\n\n\n\n\n\n\n\n\n\n\n\n\nSide-by-side slider to compare the two, from the leaflet.extras2 package\n\nmap_income | map_age\n\n\n\n\n\n\nTo turn off legends, hover text, popups\n\nmapview(ny_counties_withgeo, zcol = \"medincome\", \n         col.regions = RColorBrewer::brewer.pal(9, \"Greens\"), \n         alpha.regions = 1,\n         legend = FALSE, \n         label = FALSE, \n         popup = FALSE)\n\nWarning: Found less unique colors (9) than unique zcol values (62)! \nInterpolating color vector to match number of zcol values.\n\n\n\n\n\n\nCustomize labels\n\nmylabel <- glue::glue(\"{ny_counties_withgeo$NAM} {ny_counties_withgeo$medincome}\")\n\n\nmapview(ny_counties_withgeo, zcol = \"medincome\", \n         col.regions = RColorBrewer::brewer.pal(9, \"Greens\"), \n         alpha.regions = 1,\n         label = mylabel)\n\nWarning: Found less unique colors (9) than unique zcol values (62)! \nInterpolating color vector to match number of zcol values.\n\n\n\n\n\n\n\nCustomize popups\n\nmypopup <- glue::glue(\"<strong>{ny_counties_withgeo$NAM}</strong><br />\n                      Total Population: {ny_counties_withgeo$totalpop}<br />\n                      Median Income: {ny_counties_withgeo$medincome}\") %>% \n  lapply(htmltools::HTML)\n\n# mylabel <- glue::glue(\"{all_data$State} {all_data$PctChange10_20}%\") %>%\n#   lapply(htmltools::HTML)\n\n\nhead(mypopup)\n\n[[1]]\n<strong>Chenango County, New York</strong><br />\nTotal Population: 47407<br />\nMedian Income: 55690\n\n[[2]]\n<strong>Westchester County, New York</strong><br />\nTotal Population: 999723<br />\nMedian Income: 105387\n\n[[3]]\n<strong>Delaware County, New York</strong><br />\nTotal Population: 44644<br />\nMedian Income: 52757\n\n[[4]]\n<strong>Washington County, New York</strong><br />\nTotal Population: 61504<br />\nMedian Income: 63869\n\n[[5]]\n<strong>Oswego County, New York</strong><br />\nTotal Population: 118019<br />\nMedian Income: 61983\n\n[[6]]\n<strong>Onondaga County, New York</strong><br />\nTotal Population: 474621<br />\nMedian Income: 66012\n\n\n\nmapview(ny_counties_withgeo, zcol = \"medincome\", \n         col.regions = RColorBrewer::brewer.pal(9, \"Greens\"), \n         alpha.regions = 1,\n         popup = mypopup)\n\nWarning: Found less unique colors (9) than unique zcol values (62)! \nInterpolating color vector to match number of zcol values."
  },
  {
    "objectID": "Sample Academic Paper.html",
    "href": "Sample Academic Paper.html",
    "title": "Sample Academic Paper",
    "section": "",
    "text": "The Alteration of Aura and Loss of Reality\nWhile I was living in Manhattan, I found myself surrounded continuously by movie icons in reproduced forms from street vendors selling pictures of Audrey Hepburn to Rosie the Riveter posters being sold outside the grocery store. As a child, I had a fascination with Marylin Monroe due to my exposure to her glamor throughout the city and eventually through her famous movies. However, my exposure to Marylin Monroe and her movies broadened as I grew up and began to understand the star’s immense sexualization by the public as an individual. There is an image in particular that I had seen numerous reproductions from the movie ” The Seven Year Itch.” Reproductions of this iconic look from Marylin’s movie is seen in her wax figure at Madame Tussauds and various films depicting Marylin’s legacy. However, there is one still in particular that remains one of Monroe’s most famous pictures from “The Seven Year Itch.”\nThe exceptionally well-known white dress and the depiction of Monroe’s dress flying upwards as she attempts to hold it down remains one of Monroe’s most recognizable images to this day called The Flying Skirt. This image’s mass reproduction is seen through millions of platforms on social media, poster sales, and even recreations on Halloween. After learning more about Marylin’s difficult rise to fame and how the film industry type casted her into unfufilling and sexualized roles, I understood the importance of the message behind the iconic image.\nIn ” The Precession of Simulacra,” William Baudrillard discusses the understanding of reality as we have lost the tangibility of existence and instead replace it with the idea of that reality. In other words, we have an understanding of ideas and our desires, although the signifier does not yet exist. Baudrillard applies this to the consumer needs and capitalistic view of mass production; however, we can discuss this regarding the meaning of an image and how it is taken out of the original meaning’s context and changed by the consumer market. Therefore we can apply Baudrillard’s theory of reality to the mass production of Marylin Monroe’s iconic photograph and the public’s perception of it.\nIn the image I encountered numerous times in NYC, Monroe portrays a character that the scriptwriters have clearly sexualized. The act of pushing down a dress being blown up by the wind is directly from one scene in the movie that she is acting in, not a naturally staged image. The image does not depict anything except the character she is portraying, which is crucial for the public’s context. However, The Flying Skirt’s mass reproduction takes it out of its original context and values the signifier over the image and the context of the image itself. I believe that the consumer market takes Monroe’s acting and places it upon her personality as the consumers first make meaning of the object before the reality and tangibility of the original image. Therefore, the image that portrays Monroe’s sexualized character transforms into the understanding of Monroe as an individual, contributing to the sexualization of Monroe outside of the context of acting. Baudrillard states, “It is a generation by models of a real without origin or reality: a hyperreal” (1483). In this case, the sexualization is the “real” as Monroe’s perceived sexual nature is derived from understanding the image outside of its “origin or reality,” creating the hyperreal. In this case, the hyperreal is how the public understands Monroe’s image and her sexualization as a person rather than exclusively the characters she’s hired to play.\nThe consumer appeal to the signifier is rooted in the male-dominated market that favors the sexualization of women that overlooks the importance of understanding the signified. Monroe’s image was able to be mass-produced and taken outside of its original context as it fed into the hyperreal image of women that has been perpetuated beyond Monroe’s image and onto female figures in general. My ability to constantly view this particular image of Monroe while passing by street vendors is rooted in the masculine lens that created the sexualized image of Monroe rather than recognizing the persona she is portraying.\nGrowing up during the digital era has exposed me to various social media platforms. Some that are no longer around today and some that have become immediately recognizable and popular. I find myself going through waves of giving attention to particular media platforms over others, however, one of my favorite platforms at the moment happens to be a video-sharing app called Tik Tok. Tik Tok allows individuals throughout the world to participate in dance, comedy, and singing trends. One trend that seems to have taken off on Tik Tok is one where a piece of art is shown and the individual attempts to physically recreate the image the artist is portraying. While scrolling through Tik Tok, I was constantly encountering one particular image that most people we’re attempting to recreate; The Fallen Angel by Alexandre Cabanel.\nThe Fallen Angel depicts Lucefier shielding his face as he cries after he has fallen from heaven. Many individuals I encountered attempting to reproduce this image, assumed a similar position, and recreated Lucefier’s facial expression in an attempt to recreate the original image. The reproduction of this image can be viewed through the lens of Walter Benjamin’s theory of the loss of aura in “The Work of Art in the Age of Technological Reproducibility.” Benjamin argues that art loses its aura, or the “here and now…” (978) when it is reproduced and taken out of its original context in terms of placement. Therefore, the mass reproduction of the original image loses its aura and authenticity as it is made accessible to the mass audience outside the context of the original. We can apply this to the newest Tik Tok trend, although, I wish to alter Benjamin’s argument and argue that the loss of aura can appear on different levels of mass reproduction.\nWhen we apply Bejamin’s theory of aura to the trend we can see three different levels of reproduction that result in the loss of the original aura. The first level of reproduction is the ability to access the image on a digital scale, outside of the context of the original placement of The Fallen Angel. The mass reproduction of the original image is the first level of reproduction that we can equate to the loss of the aura. The second level of reproduction would be the use of the image within the video as it takes the digital image and reproduces it to show the image of the original painting before it is recreated by the individual. The video depicts the two reproductions of the original painting one from the original digital reproduction and the second from the reproduction of that digital image in the video. The last level of reproduction of the image of The Fallen Angel is through the physical attempt to recreate the image itself by the individual making the video. These three layers of reproduction contribute to the loss of the original aura of the image Benjamin discusses. However, with the expansion of digital platforms, we can place this loss of originality and aura on different levels of reproduction as there can be multiple reproductions of a reproduced image.\nWe can view the appeal of this media reproduction through the desire for fame and recognition on large media platforms. Benjamin’s theory of exhibition value, which discusses how the public receives works on a mass public scale, depicts the value that we can see through the media and the public understanding of images today however the reproduction of images can also contribute to monetary value for other individuals. The value of fame and profit benefits the individual, therefore the loss of aura is not what’s valued to the individual, instead, it is the outcome of the reproduction that is important for capitalistic profit.\nAlthough mass reproduction and recreation can lead to great social change, the issue lies in the public’s perception of the images they are exposed to through this mass reproduction. Growing up I understood that Monroe was viewed as a sexual symbol in the film industry, however, this sexualized vision of her was not a result of the context of her acting, but rather the idea placed upon her images for the masculine consumer. Therefore, the value of reproduction is sourced in how to public perceives meaning within the image. There cannot be any effective social change until the consumer market focuses on the tangible reality of the image, rather than the idea and profit that comes from the removal of context. When we start to stray from placing profit above tangible truth, then we are able to create great social change. However, our society today depicts the complications in valuing truth as it doesn’t appeal to the mass market. A great alteration in the market is needed in order to change the exhibition value of images and alter the value into one that promotes truth rather than profit.\nWork Cited\nBenjamin, Walter “The Work of Art in the Age of Its Technological Reproducibility” The Norton Anthology Theory and Criticism Third Edition, Edited by Peter Simon, W.W Norton & Company, Inc, 2018, pp 976\nBaudrillard, Jean ” The Precession of Simulacra” The Norton Anthology Theory and Criticism Third Edition, Edited by Peter Simon, W.W Norton & Company, Inc, 2018, pp 1483\nCabanel, Alexandre The Fallen Angel. 1868. Musee Fabre, France\nShaw, Sam Flying Skirt. 1954.\n```"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Zazni Vlijter",
    "section": "",
    "text": "Hi, I’m Zazni and I’m a student at The George Washington University. I like to cook and take pictures!"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Zazni Vlijter",
    "section": "Education",
    "text": "Education\nThe George Washington University, Bachelor of Arts in English"
  },
  {
    "objectID": "index.html#skills",
    "href": "index.html#skills",
    "title": "Zazni Vlijter",
    "section": "Skills",
    "text": "Skills\nWriting, Strategic Communications, Design, and Photography"
  },
  {
    "objectID": "01_virginia_election_project_datawrangling.html",
    "href": "01_virginia_election_project_datawrangling.html",
    "title": "Virginia Election Project",
    "section": "",
    "text": "Data available here: https://historical.elections.virginia.gov/elections/view/144567/\nA little column cleaning and we’ll load in the data file.\n\nprez_2020 <- read_csv(\"processed_data/va_2020_prez_cleaned.csv\")\n\nRows: 134 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): locality\nnum (3): biden, trump, total_votes_2021_prez\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nLet’s see what we have\n\nhead(prez_2020) \n\n# A tibble: 6 × 4\n  locality         biden trump total_votes_2021_prez\n  <chr>            <dbl> <dbl>                 <dbl>\n1 Accomack County   7578  9172                 16962\n2 Albemarle County 42466 20804                 64657\n3 Alexandria City  66240 14544                 82508\n4 Alleghany County  2243  5859                  8203\n5 Amelia County     2411  5390                  7893\n6 Amherst County    5672 11041                 17005\n\n\nCalculating percentage of the vote\n\nprez_2020 %>% \n  mutate(\n    biden_pct = biden/total_votes_2021_prez\n  )\n\n# A tibble: 134 × 5\n   locality           biden trump total_votes_2021_prez biden_pct\n   <chr>              <dbl> <dbl>                 <dbl>     <dbl>\n 1 Accomack County     7578  9172                 16962     0.447\n 2 Albemarle County   42466 20804                 64657     0.657\n 3 Alexandria City    66240 14544                 82508     0.803\n 4 Alleghany County    2243  5859                  8203     0.273\n 5 Amelia County       2411  5390                  7893     0.305\n 6 Amherst County      5672 11041                 17005     0.334\n 7 Appomattox County   2418  6702                  9268     0.261\n 8 Arlington County  105344 22318                130699     0.806\n 9 Augusta County     10840 30714                 42278     0.256\n10 Bath County          646  1834                  2501     0.258\n# … with 124 more rows\n\n\nNow let’s do some rounding and move that decimal point\n\nprez_2020 %>% \n  mutate(\n    biden_pct = janitor::round_half_up(biden / total_votes_2021_prez * 100, 1)\n  )\n\n# A tibble: 134 × 5\n   locality           biden trump total_votes_2021_prez biden_pct\n   <chr>              <dbl> <dbl>                 <dbl>     <dbl>\n 1 Accomack County     7578  9172                 16962      44.7\n 2 Albemarle County   42466 20804                 64657      65.7\n 3 Alexandria City    66240 14544                 82508      80.3\n 4 Alleghany County    2243  5859                  8203      27.3\n 5 Amelia County       2411  5390                  7893      30.5\n 6 Amherst County      5672 11041                 17005      33.4\n 7 Appomattox County   2418  6702                  9268      26.1\n 8 Arlington County  105344 22318                130699      80.6\n 9 Augusta County     10840 30714                 42278      25.6\n10 Bath County          646  1834                  2501      25.8\n# … with 124 more rows\n\n\nNow trump too\n\nprez_2020 <- prez_2020 %>% \n  mutate(\n    biden_pct = janitor::round_half_up(biden / total_votes_2021_prez * 100, 2),\n    trump_pct = janitor::round_half_up(trump / total_votes_2021_prez * 100, 2)\n  )\n\nhead(prez_2020)\n\n# A tibble: 6 × 6\n  locality         biden trump total_votes_2021_prez biden_pct trump_pct\n  <chr>            <dbl> <dbl>                 <dbl>     <dbl>     <dbl>\n1 Accomack County   7578  9172                 16962      44.7      54.1\n2 Albemarle County 42466 20804                 64657      65.7      32.2\n3 Alexandria City  66240 14544                 82508      80.3      17.6\n4 Alleghany County  2243  5859                  8203      27.3      71.4\n5 Amelia County     2411  5390                  7893      30.6      68.3\n6 Amherst County    5672 11041                 17005      33.4      64.9"
  },
  {
    "objectID": "01_virginia_election_project_datawrangling.html#reshaping",
    "href": "01_virginia_election_project_datawrangling.html#reshaping",
    "title": "Virginia Election Project",
    "section": "Reshaping",
    "text": "Reshaping\nEnter pivot_wider().\nWe’ll get rid of everything we don’t need first.\n\ngov_2021 <- gov_2021 %>% \n  filter(ballot_name %in% c(\"Glenn A. Youngkin\", \"Terry R. McAuliffe\")) %>% \n  select(-locality_code,\n         -political_party)\n  \ngov_2021\n\n# A tibble: 266 × 4\n   locality_name    ballot_name        votes percentage\n   <chr>            <chr>              <int> <chr>     \n 1 ACCOMACK COUNTY  Glenn A. Youngkin   7878 61.08%    \n 2 ACCOMACK COUNTY  Terry R. McAuliffe  4948 38.37%    \n 3 ALBEMARLE COUNTY Glenn A. Youngkin  19141 37.21%    \n 4 ALBEMARLE COUNTY Terry R. McAuliffe 31919 62.05%    \n 5 ALEXANDRIA CITY  Glenn A. Youngkin  14013 24.02%    \n 6 ALEXANDRIA CITY  Terry R. McAuliffe 43866 75.20%    \n 7 ALLEGHANY COUNTY Glenn A. Youngkin   4530 74.52%    \n 8 ALLEGHANY COUNTY Terry R. McAuliffe  1518 24.97%    \n 9 AMELIA COUNTY    Glenn A. Youngkin   4720 74.19%    \n10 AMELIA COUNTY    Terry R. McAuliffe  1617 25.42%    \n# … with 256 more rows\n\n\nNow we’ll do the spreading out to reshape.\n\ngov_2021_wide <- gov_2021 %>% \n  pivot_wider(names_from = ballot_name, values_from = c(votes, percentage))\n\ngov_2021_wide\n\n# A tibble: 133 × 5\n   locality_name     `votes_Glenn A. Youngkin` votes_Terry R. …¹ perce…² perce…³\n   <chr>                                 <int>             <int> <chr>   <chr>  \n 1 ACCOMACK COUNTY                        7878              4948 61.08%  38.37% \n 2 ALBEMARLE COUNTY                      19141             31919 37.21%  62.05% \n 3 ALEXANDRIA CITY                       14013             43866 24.02%  75.20% \n 4 ALLEGHANY COUNTY                       4530              1518 74.52%  24.97% \n 5 AMELIA COUNTY                          4720              1617 74.19%  25.42% \n 6 AMHERST COUNTY                         9731              3897 71.00%  28.43% \n 7 APPOMATTOX COUNTY                      5971              1438 80.26%  19.33% \n 8 ARLINGTON COUNTY                      21548             73013 22.63%  76.67% \n 9 AUGUSTA COUNTY                        26196              7231 77.93%  21.51% \n10 BATH COUNTY                            1539               396 79.04%  20.34% \n# … with 123 more rows, and abbreviated variable names\n#   ¹​`votes_Terry R. McAuliffe`, ²​`percentage_Glenn A. Youngkin`,\n#   ³​`percentage_Terry R. McAuliffe`\n\n\nNice.\nThis is giving us some pretty long column names. we can change them after the fact using rename(). But first let’s clean the names to make it easier.\n\ngov_2021_wide <- gov_2021_wide %>% \n  clean_names()\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    votes_glenn_a_youngkin votes_terry_r_mc_aul…¹ perce…² perce…³\n  <chr>                             <int>                  <int> <chr>   <chr>  \n1 ACCOMACK COUNTY                    7878                   4948 61.08%  38.37% \n2 ALBEMARLE COUNTY                  19141                  31919 37.21%  62.05% \n3 ALEXANDRIA CITY                   14013                  43866 24.02%  75.20% \n4 ALLEGHANY COUNTY                   4530                   1518 74.52%  24.97% \n5 AMELIA COUNTY                      4720                   1617 74.19%  25.42% \n6 AMHERST COUNTY                     9731                   3897 71.00%  28.43% \n# … with abbreviated variable names ¹​votes_terry_r_mc_auliffe,\n#   ²​percentage_glenn_a_youngkin, ³​percentage_terry_r_mc_auliffe\n\n\nNow let’s rename, and we’ll use similar names to what we had earlier in our 2021 results.\n\ngov_2021_wide <- gov_2021_wide %>% \n  rename(\n    youngkin = votes_glenn_a_youngkin,\n    mcauliffe = votes_terry_r_mc_auliffe,\n    pct_youngkin = percentage_glenn_a_youngkin,\n    pct_mcauliffe = percentage_terry_r_mc_auliffe\n  )\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    youngkin mcauliffe pct_youngkin pct_mcauliffe\n  <chr>               <int>     <int> <chr>        <chr>        \n1 ACCOMACK COUNTY      7878      4948 61.08%       38.37%       \n2 ALBEMARLE COUNTY    19141     31919 37.21%       62.05%       \n3 ALEXANDRIA CITY     14013     43866 24.02%       75.20%       \n4 ALLEGHANY COUNTY     4530      1518 74.52%       24.97%       \n5 AMELIA COUNTY        4720      1617 74.19%       25.42%       \n6 AMHERST COUNTY       9731      3897 71.00%       28.43%       \n\n\nBingo.\nThere’s still one potential issue here. Can you see it?\nThe percentage columns are actually text values, not numbers. And they have that % sign in the text too. Let’s fix that using a handy function from the readr package, parse_number().\n\ngov_2021_wide <- gov_2021_wide %>% \n  mutate(\n    pct_youngkin = readr::parse_number(pct_youngkin),\n    pct_mcauliffe = readr::parse_number(pct_mcauliffe)\n  )\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    youngkin mcauliffe pct_youngkin pct_mcauliffe\n  <chr>               <int>     <int>        <dbl>         <dbl>\n1 ACCOMACK COUNTY      7878      4948         61.1          38.4\n2 ALBEMARLE COUNTY    19141     31919         37.2          62.0\n3 ALEXANDRIA CITY     14013     43866         24.0          75.2\n4 ALLEGHANY COUNTY     4530      1518         74.5          25.0\n5 AMELIA COUNTY        4720      1617         74.2          25.4\n6 AMHERST COUNTY       9731      3897         71            28.4\n\n\nPerfect. Problem solved."
  },
  {
    "objectID": "01_virginia_election_project_datawrangling.html#comparing-gov-vs.-prez-results",
    "href": "01_virginia_election_project_datawrangling.html#comparing-gov-vs.-prez-results",
    "title": "Virginia Election Project",
    "section": "Comparing gov vs. prez results",
    "text": "Comparing gov vs. prez results\nNow that things are join, let’s actually go ahead and start making columns to compare the two elections and how the candidates did this time compared with last time.\nWhere should we go from here….? Give it a shot…\n\njoined_vacomparison%>%\nmutate(mc_overperform = pct_mcauliffe - biden_pct, mc_overperform_worsethan5 = if_else(mc_overperform < -5, \"YES\", \"NO\"))\n\n# A tibble: 133 × 11\n   locality  biden trump biden…¹ trump…² young…³ mcaul…⁴ pct_y…⁵ pct_m…⁶ mc_ov…⁷\n   <chr>     <dbl> <dbl>   <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>   <dbl>\n 1 ACCOMAC…   7578  9172    44.7    54.1    7878    4948    61.1    38.4   -6.31\n 2 ALBEMAR…  42466 20804    65.7    32.2   19141   31919    37.2    62.0   -3.63\n 3 ALEXAND…  66240 14544    80.3    17.6   14013   43866    24.0    75.2   -5.08\n 4 ALLEGHA…   2243  5859    27.3    71.4    4530    1518    74.5    25.0   -2.37\n 5 AMELIA …   2411  5390    30.6    68.3    4720    1617    74.2    25.4   -5.13\n 6 AMHERST…   5672 11041    33.4    64.9    9731    3897    71      28.4   -4.92\n 7 APPOMAT…   2418  6702    26.1    72.3    5971    1438    80.3    19.3   -6.76\n 8 ARLINGT… 105344 22318    80.6    17.1   21548   73013    22.6    76.7   -3.93\n 9 AUGUSTA…  10840 30714    25.6    72.6   26196    7231    77.9    21.5   -4.13\n10 BATH CO…    646  1834    25.8    73.3    1539     396    79.0    20.3   -5.49\n# … with 123 more rows, 1 more variable: mc_overperform_worsethan5 <chr>, and\n#   abbreviated variable names ¹​biden_pct, ²​trump_pct, ³​youngkin, ⁴​mcauliffe,\n#   ⁵​pct_youngkin, ⁶​pct_mcauliffe, ⁷​mc_overperform\n\n\n\nsaveRDS(joined_vacomparison, here(\"processed_data\", \"joined_vacomparison.rds\"))\nwrite_csv(joined_vacomparison, here(\"processed_data\", \"joined_vacomparison.csv\"))"
  },
  {
    "objectID": "portfolio.html",
    "href": "portfolio.html",
    "title": "Portfolio",
    "section": "",
    "text": "Hi there this is my portfolio page!\nHere is my resume.\nhttps://10e6d70d378a446a80359e47bca43ac9.app.posit.cloud/file_show?path=%2Fcloud%2Fproject%2FZazni+Vlijter+Resume+08.22.22.pdf"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "My name is Zazni Vlijter and I am a professional in strategic communications. I was born and raised in NYC where I went to Special Music School High School as a vocal major. I am currently a senior at The George Washington University majoring in English with a minor in Journalism and Mass Communications and Criminal Justice.\n```"
  }
]